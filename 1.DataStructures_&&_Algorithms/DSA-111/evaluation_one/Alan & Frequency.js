// Alan Turing, the mathematician, is trying to break the encrypted messages of the German Troops, generated by their encryption device "Enigma". To find the distribution of characters, he needs to find out how many times a particular character appears in a string. But, to feed the data into his computer, "Christopher", he needs the data in lexicographic order, that is, in alphabetical order. Since he is busy making "Christopher" better, he asks you for help.

// You are given a stringstrof lengthN. Help Alan find the frequency of characters in the encrypted strings in alphabetical order.

// Note: The string contains only lowercase alphabets.


// Input
// Input

// The first line contains N, the length of the string, and the next line contains the string itself.

// Constraints

// 1 <= N<=100


// Output
// For each unique character in the string, print the character along with its frequency in the encrypted string, separated by '-', on a new line.

// Note:You have to print the output in lexicographical/alphabetical order.


// Sample Input 1 

// 4
// aman
// Sample Output 1

// a-2
// m-1
// n-1
// Sample Input 2 

// 5
// masai
// Sample Output 2

// a-2
// i-1
// m-1
// s-1
// Hint

// In Sample1,

// N=4, str="aman"
// The frequencies of each character: a-2, m-1, n-1.
// The output must be in alphabetical order, hence:
// a-2
// m-1
// n-1
// In Sample2,

// N=5, str="masai"
// The frequencies of each character: m-1, a-2, s-1, i-1.
// The output must be in alphabetical order, hence:
// a-2
// i-1
// m-1
// s-1

function alanAndFrequency(N, str) {
  let obj = {};

  for (i = 0; i < N; i++) {
    if (obj[str[i]] == undefined) {
      obj[str[i]] = 1;
    } else {
      obj[str[i]]++;
    }
  }
  let keys = Object.keys(obj),
    j,
    len = keys.length;
  keys.sort();
  for (j = 0; j < len; j++) {
    let v = keys[j];
    console.log(v + "-" + obj[v]);
  }
}